import { getStyleCache, componentStyles } from 'jsxstyle-utils';
import { h, Component } from 'preact';

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var cache = getStyleCache();

function factory(displayName) {
  var _a;

  var tagName = 'div';
  var defaultProps = componentStyles[displayName] || undefined;
  return (
    (_a = /*#__PURE__*/ (function (_preact$Component) {
      _inheritsLoose(_a, _preact$Component);

      function _a(props) {
        var _this;

        _this = _preact$Component.call(this, props) || this;
        _this.component = props.component || tagName;
        _this.className = cache.getClassName(props, props.class);
        return _this;
      }

      var _proto = _a.prototype;

      _proto.componentWillReceiveProps = function componentWillReceiveProps(
        props
      ) {
        this.component = props.component || tagName;
        this.className = cache.getClassName(props, props.class);
      };

      _proto.render = function render(_ref) {
        var props = _ref.props,
          style = _ref.style,
          children = _ref.children;
        return h(
          this.component,
          Object.assign({}, props, {
            class: this.className,
            style: style,
          }),
          children
        );
      };

      return _a;
    })(Component)),
    (_a.defaultProps = defaultProps),
    (_a.displayName = displayName),
    _a
  );
}

var Box = /*#__PURE__*/ factory('Box');
var Block = /*#__PURE__*/ factory('Block');
var Inline = /*#__PURE__*/ factory('Inline');
var InlineBlock = /*#__PURE__*/ factory('InlineBlock');
var Row = /*#__PURE__*/ factory('Row');
var Col = /*#__PURE__*/ factory('Col');
var InlineRow = /*#__PURE__*/ factory('InlineRow');
var InlineCol = /*#__PURE__*/ factory('InlineCol');
var Grid = /*#__PURE__*/ factory('Grid');

export {
  Block,
  Box,
  Col,
  Grid,
  Inline,
  InlineBlock,
  InlineCol,
  InlineRow,
  Row,
  cache,
};
